@startuml EditTripSequenceDiagram
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":EditTripCommandParser" as EditTripParser LOGIC_COLOR
participant "<<static>>\nParserUtil" as ParserUtil LOGIC_COLOR
participant "a:EditTripCommand" as EditCommand LOGIC_COLOR

end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute()
activate LogicManager

LogicManager -> AddressBookParser : parseCommand()
activate AddressBookParser

AddressBookParser -> EditTripParser : parse()
activate EditTripParser

EditTripParser -> ParserUtil : parseTripName()
EditTripParser -> ParserUtil : parseAccommodation()
EditTripParser -> ParserUtil : parseItinerary()
EditTripParser -> ParserUtil : parseTripDate()
EditTripParser -> ParserUtil : parseName()
EditTripParser -> ParserUtil : parseNote()

create EditCommand
EditTripParser -> EditCommand
activate EditCommand

EditCommand --> EditTripParser
deactivate EditCommand

EditTripParser --> AddressBookParser : a
deactivate EditTripParser

AddressBookParser --> LogicManager : a
deactivate AddressBookParser

LogicManager -> EditCommand : execute()
activate EditCommand

EditCommand -> Model : getFilteredTripList()
activate Model
Model --> EditCommand : List<Trip>
deactivate Model

EditCommand -> EditCommand : createEditedTrip()

note right of EditCommand
Check for duplicates
end note
EditCommand -> EditCommand : isSameTrip()

EditCommand -> Model : hasTrip(editedTrip)
activate Model
Model --> EditCommand : boolean
deactivate Model

alt Duplicate Trip Found
    EditCommand -> EditCommand : throw CommandException
    EditCommand --> LogicManager : exception
    [<-- LogicManager : exception
    deactivate EditCommand
    deactivate LogicManager
end

EditCommand -> Model : setTrip(tripToEdit, editedTrip)
activate Model
Model --> EditCommand
deactivate Model

EditCommand -> Model : updateFilteredTripList(PREDICATE_SHOW_ALL_TRIPS)
activate Model
Model --> EditCommand
deactivate Model

EditCommand --> LogicManager : CommandResult
deactivate EditCommand
EditCommand -[hidden]-> LogicManager : result

[<-- LogicManager
deactivate LogicManager
@enduml
